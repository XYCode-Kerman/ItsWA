name: AutoTest
on: [push, pull_request]

jobs:
  autotest:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: ['3.10', '3.11', '3.12']

    runs-on: ${{ matrix.os }}

    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python version
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install poetry
        uses: abatilo/actions-poetry@v2

      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install the project dependencies
        run: poetry install

      - name: Run the automated tests
        run: poetry run pytest --cov --cov-report=xml -v -s

      - uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          files: coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS,PYTHON
          slug: XYCode-Kerman/ItsWA
